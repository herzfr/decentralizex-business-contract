service: () -> {
    assignContractTo: (record {"principal":principal; contract_id:text; contract_recipient:principal}) -> (variant {Ok:record {status:variant {ISSUED:text; UNISSUED:text}; scope_of_work:text; parties_involved:vec record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; contract_payment:nat64; amendments:text; notice:text; objective:text; force_majeure:text; dispute_resolution:text; contract_id:text; effective_date:text; contract_recipient:principal; signatures:vec record {"principal":principal; agree:bool; sign_date:nat64}; contracting_party:principal; term_and_termination:text; term_and_condition:text; confidentialy:text; intellectual_property:text; payment_terms:text; payment:record {change_output:nat64; payment_status:variant {Refund:text; PaymentPending:text; Partial:text; Completed:text; DownPayment:text}; total_payment:nat64; transactions:vec record {transaction_date:nat64; total:nat64; transaction_hash:nat64; transaction_memo:text; reciever:text; token_symbol:text; transfer_fee:nat64; token_name:text; paid_at_block:opt nat64; transactionid:text}}; governing_law:text}; Err:text});
    createContract: (record {scope_of_work:text; parties_involved:record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; contract_payment:opt nat64; amendments:opt text; notice:opt text; objective:text; force_majeure:opt text; dispute_resolution:opt text; effective_date:text; contract_recipient:principal; signatures:vec record {"principal":principal; agree:bool; sign_date:nat64}; contracting_party:principal; term_and_termination:opt text; term_and_condition:text; confidentialy:opt text; intellectual_property:opt text; payment_terms:opt text; governing_law:opt text}) -> (variant {Ok:record {status:variant {ISSUED:text; UNISSUED:text}; scope_of_work:text; parties_involved:vec record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; contract_payment:nat64; amendments:text; notice:text; objective:text; force_majeure:text; dispute_resolution:text; contract_id:text; effective_date:text; contract_recipient:principal; signatures:vec record {"principal":principal; agree:bool; sign_date:nat64}; contracting_party:principal; term_and_termination:text; term_and_condition:text; confidentialy:text; intellectual_property:text; payment_terms:text; payment:record {change_output:nat64; payment_status:variant {Refund:text; PaymentPending:text; Partial:text; Completed:text; DownPayment:text}; total_payment:nat64; transactions:vec record {transaction_date:nat64; total:nat64; transaction_hash:nat64; transaction_memo:text; reciever:text; token_symbol:text; transfer_fee:nat64; token_name:text; paid_at_block:opt nat64; transactionid:text}}; governing_law:text}; Err:text});
    getContractAplicant: (record {"principal":principal; length:int16; index:int8}) -> (variant {Ok:vec record {status:variant {ISSUED:text; UNISSUED:text}; scope_of_work:text; parties_involved:vec record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; contract_payment:nat64; amendments:text; notice:text; objective:text; force_majeure:text; dispute_resolution:text; contract_id:text; effective_date:text; contract_recipient:principal; signatures:vec record {"principal":principal; agree:bool; sign_date:nat64}; contracting_party:principal; term_and_termination:text; term_and_condition:text; confidentialy:text; intellectual_property:text; payment_terms:text; payment:record {change_output:nat64; payment_status:variant {Refund:text; PaymentPending:text; Partial:text; Completed:text; DownPayment:text}; total_payment:nat64; transactions:vec record {transaction_date:nat64; total:nat64; transaction_hash:nat64; transaction_memo:text; reciever:text; token_symbol:text; transfer_fee:nat64; token_name:text; paid_at_block:opt nat64; transactionid:text}}; governing_law:text}; Err:text}) query;
    getContractHolder: (record {"principal":principal; contract_assigns:vec text; length:int8; index:int8}) -> (variant {Ok:vec record {status:variant {ISSUED:text; UNISSUED:text}; scope_of_work:text; parties_involved:vec record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; contract_payment:nat64; amendments:text; notice:text; objective:text; force_majeure:text; dispute_resolution:text; contract_id:text; effective_date:text; contract_recipient:principal; signatures:vec record {"principal":principal; agree:bool; sign_date:nat64}; contracting_party:principal; term_and_termination:text; term_and_condition:text; confidentialy:text; intellectual_property:text; payment_terms:text; payment:record {change_output:nat64; payment_status:variant {Refund:text; PaymentPending:text; Partial:text; Completed:text; DownPayment:text}; total_payment:nat64; transactions:vec record {transaction_date:nat64; total:nat64; transaction_hash:nat64; transaction_memo:text; reciever:text; token_symbol:text; transfer_fee:nat64; token_name:text; paid_at_block:opt nat64; transactionid:text}}; governing_law:text}; Err:vec record {status:variant {ISSUED:text; UNISSUED:text}; scope_of_work:text; parties_involved:vec record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; contract_payment:nat64; amendments:text; notice:text; objective:text; force_majeure:text; dispute_resolution:text; contract_id:text; effective_date:text; contract_recipient:principal; signatures:vec record {"principal":principal; agree:bool; sign_date:nat64}; contracting_party:principal; term_and_termination:text; term_and_condition:text; confidentialy:text; intellectual_property:text; payment_terms:text; payment:record {change_output:nat64; payment_status:variant {Refund:text; PaymentPending:text; Partial:text; Completed:text; DownPayment:text}; total_payment:nat64; transactions:vec record {transaction_date:nat64; total:nat64; transaction_hash:nat64; transaction_memo:text; reciever:text; token_symbol:text; transfer_fee:nat64; token_name:text; paid_at_block:opt nat64; transactionid:text}}; governing_law:text}}) query;
    getListHolder: (principal) -> (variant {Ok:record {contract_id:vec text; message:text; badge:bool}; Err:text}) query;
    getParty: (principal) -> (variant {Ok:record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; Err:text}) query;
    readBadge: (principal) -> (variant {Ok:text; Err:text});
    upsertParties: (record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}) -> (variant {Ok:record {account_id:principal; type_parties:variant {INDIVIDUALS:text; ORGANIZATIONS:text; COMPANIES:text}; legal_name:text; address:text; identification_information:text}; Err:text});
}
